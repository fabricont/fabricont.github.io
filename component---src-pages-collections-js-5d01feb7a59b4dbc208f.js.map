{"version":3,"sources":["webpack:///./src/pages/collections.js"],"names":["Collections","data","headerTitle","className","allMarkdownRemark","edges","map","node","frontmatter","type","key","id","fixed","featuredImage","childImageSharp","title","excerpt","style","color","date","to","fields","slug"],"mappings":"2FAAA,oIAQe,SAASA,EAAT,GAA8B,IAARC,EAAO,EAAPA,KACnC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQC,YAAY,gBACpB,2BAASC,UAAU,QACjB,uBAAKA,UAAU,aACb,qBAAGA,UAAU,SAAb,gBAGA,qBAAGA,UAAU,YAAb,6BAKJ,2BAASA,UAAU,WACjB,uBAAKA,UAAU,WACb,uBAAKA,UAAU,wBAEXF,EAAKG,kBAAkBC,MAAMC,KAC3B,gBAAEC,EAAF,EAAEA,KAAF,OACE,uBAAKJ,UAAS,WAAqC,WAAzBI,EAAKC,YAAYC,KAAoB,UAAY,QAAUC,IAAKH,EAAKI,IAC7F,uBAAKR,UAAU,OACb,2BAASA,UAAU,SACjB,uBAAKA,UAAU,cACb,0BAAQA,UAAU,oBAChB,gBAAC,IAAD,CAAKS,MAAOL,EAAKC,YAAYK,cAAcC,gBAAgBF,UAG/D,uBAAKT,UAAU,iBACb,uBAAKA,UAAU,WACb,0BAAKI,EAAKC,YAAYO,OACtB,yBACCR,EAAKC,YAAYQ,SAElB,0BACA,wBAAMb,UAAU,YAAYc,MAAO,CAAEC,MAAM,SACvC,wBAAMf,UAAuC,WAAzBI,EAAKC,YAAYC,KAAoB,OAAS,IAAlE,iBACA,wBAAMN,UAAuC,WAAzBI,EAAKC,YAAYC,KAAoB,OAAS,IAAlE,kBACCF,EAAKC,YAAYW,OAEtB,gBAAC,OAAD,CAAMC,GAAIb,EAAKc,OAAOC,KAAMnB,UAAU,UAAtC,wBActB,gBAAC,IAAD","file":"component---src-pages-collections-js-5d01feb7a59b4dbc208f.js","sourcesContent":["import Container from \"../components/container\"\nimport * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/footer\"\n\nexport default function Collections({data}) {\n  return (\n    <Container>\n      <Header headerTitle=\"collections\"></Header>\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">\n            #collections\n          </p>\n          <p className=\"subtitle\">\n            my photographic journey\n          </p>\n        </div>\n      </section>\n      <section className=\"section\">\n        <div className=\"content\">\n          <div className=\"columns is-multiline\">\n            {\n              data.allMarkdownRemark.edges.map( \n                ({node}) => (\n                  <div className={`column ${node.frontmatter.type == 'primary' ? 'is-full' : 'is-6'}`} key={node.id}>\n                    <div className=\"box\">\n                      <article className=\"media\">\n                        <div className=\"media-left\">\n                          <figure className=\"image is-128x128\">\n                            <Img fixed={node.frontmatter.featuredImage.childImageSharp.fixed} />\n                          </figure>\n                        </div>\n                        <div className=\"media-content\">\n                          <div className=\"content\">\n                            <h4>{node.frontmatter.title}</h4>\n                            <p>\n                            {node.frontmatter.excerpt}\n                            </p>\n                            <h5>\n                            <span className=\"is-size-6\" style={{ color: `#999` }}>\n                                <span className={`${node.frontmatter.type != 'primary' ? 'hide' : ''}`} >Last update: </span>\n                                <span className={`${node.frontmatter.type == 'primary' ? 'hide' : ''}`} >Published on: </span>\n                                {node.frontmatter.date}</span>\n                            </h5>\n                            <Link to={node.fields.slug} className=\"button\">\n                                View more\n                            </Link>\n                          </div>\n                        </div>\n                      </article>\n                    </div>\n                  </div>\n                )\n              )\n            }\n          </div>\n        </div>\n      </section>\n      <Footer></Footer>\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(sort: {order: DESC, fields: frontmatter___date}) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            type\n            excerpt\n            featuredImage {\n              childImageSharp {\n                fixed(width: 128, height: 128) {\n                  aspectRatio\n                  base64\n                  height\n                  originalName\n                  src\n                  srcSet\n                  srcSetWebp\n                  srcWebp\n                  width\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          id\n        }\n      }\n      totalCount\n    }\n  }\n`\n"],"sourceRoot":""}